dfr <- data.frame(retDate, fbr, nflxr, twtrr, amznr, nvdar)
ggplot(dfr, aes(retDate)) +
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("green","orange","purple", "blue","red")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("") +
ylab("Returns")
fbr <- dailyRets(fb)
nflxr <- dailyRets(nflx)
twtrr <- dailyRets(twtr)
amznr <- dailyRets(amzn)
nvdar <- dailyRets(nvda)
retDate <- Dates[2:len(Dates)]
dfr <- data.frame(retDate, fbr, nflxr, twtrr, amznr, nvdar)
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("green","orange","purple", "blue","red")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("") +
ylab("Returns")
dailyRets <- function(stocks) {
prices <- stocks[,"Adj.Close", drop=FALSE]
n <- nrow(stocks)
returns <- ((prices[2:n,1] - prices[1:(n-1),1])/prices[1:(n-1),1]) # sbux_ret (from example)
gret <- 1 + returns
fv <- cumprod(gret) - 1
names(fv) <- stocks[2:n,1]
return(fv)
}
fbr <- dailyRets(fb)
nflxr <- dailyRets(nflx)
twtrr <- dailyRets(twtr)
amznr <- dailyRets(amzn)
nvdar <- dailyRets(nvda)
retDate <- Dates[2:len(Dates)]
dfr <- data.frame(retDate, fbr, nflxr, twtrr, amznr, nvdar)
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("green","orange","purple", "blue","red")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("") +
ylab("Returns")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("green","orange","purple", "blue","red")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
SharpeRatio(df2)
SharpeRatio(fbr)
SharpeRatio(fbr, Rf=0.95)
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("green","orange", "blue","red","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("orange", "blue","red","green","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("red","orange", "blue","green","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("orange","red", "blue","green","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("orange", "blue","red","green","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("orange", "blue","green","red","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
ggplot(dfr, aes(retDate)) +
geom_line(aes(y=fbr, color = "fb")) +
geom_line(aes(y=nflxr, color = "nflx")) +
geom_line(aes(y=twtrr, color = "twtr")) +
geom_line(aes(y=amznr, color = "amzn")) +
geom_line(aes(y=nvdar, color = "nvda")) +
scale_color_manual("",
breaks = c("fb", "nflx", "twtr", "amzn", "nvda"),
values = c("blue","orange", "green","red","purple")) +# These go top to bottom.
ggtitle("Returns by Day") +
theme(plot.title = element_text(lineheight=.7, face="bold")) +
xlab("Date") +
ylab("")
SharpeRatio(fbr, Rf=0.95, scale = 252)
SharpeRatio(dfr, Rf=0.95, scale = 252)
SharpeRatio(dfr[,2:6], Rf=0.95, scale = 252)
SharpeRatio(nflxr, Rf=0.95, scale = 252)
?SharpeRatio
SharpeRatio(nflxr, Rf=0.95, scale = 252, weights = 1)
SharpeRatio(nflxr, Rf=0.95, scale = 252, VaR = 1)
SharpeRatio.annualized(dfr)
mom_ret <- price.shift(lag).pct_change(lookback)
pct_change <- function(val){
return(val/lag(val,-1) - 1)
}
calc_mom <- function(price, lookback, lag = 1){
mom_ret <- price.shift(lag).pct_change(lookback)
}
calc_mom <- function(price, lookback, lag = 1){
mom_ret <- price.shift(lag).pct_change(lookback)
}
lag <- 1
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag).pct_change(lookback)
}
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag).pct_change(lookback)
pctchange <- function(val){
return(val/lag(val,-1) - 1)
}
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag).pctchange(lookback)
}
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag)#.pctchange(lookback)
}
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag)#.pctchange(lookback)
mom_ret <- mom_ret.pctchange(lookback)
}
?rank
ranks <- rank(mom_ret)
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag)
mom_ret <- mom_ret.pctchange(lookback)
ranks <- rank(mom_ret)
}
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag)
mom_ret <- mom_ret.pctchange(lookback)
ranks <- mom_ret.rank(axis = 1, ascending = FALSE)
# demeaned <- ranks.subtract(ranks.mean(axis = 1))
}
?subtract
SharpeRatio.annualized(fbr)
?SharpeRatio.annualized
SharpeRatio.annualized(dfr[,2:6,drop = FALSE])
SharpeRatio.annualized(dfr[,2,drop = FALSE])
SharpeRatio.annualized(fbr, drop = FALSE)
SharpeRatio.annualized(fbr)
SharpeRatio.annualized(fbr, Rf = .95)
SharpeRatio.annualized(fbr, Rf = .95, scale = 252)
SharpeRatio.annualized(fbr, scale = 252)
SharpeRatio.annualized(fb, scale = 252)
SharpeRatio.annualized(fbc, scale = 252)
SharpeRatio.annualized(fb$Close, scale = 252)
SharpeRatio.annualized(dfr[,2,drop=FALSE], scale = 252)
SharpeRatio.annualized(dfr[2:len(fbr),2,drop=FALSE], scale = 252)
SharpeRatio.annualized(fbr, scale = 252)
SharpeRatio.annualized(fbr)
SharpeRatio(fbr)
?VaR
SharpeRatio(fbr, Rf = 0.95)
SharpeRatio(fbr, Rf = 1)
SharpeRatio(fbr, Rf = 0)
x <- SharpeRatio(fbr, Rf = 0)
x
x[1,1]
x <- x[1,1]
x
x + 1
x
x <- SharpeRatio(fbr, Rf = 0)
x
?ES
?SharpeRatio
SharpeRatio(dfr[,2:6], Rf = dfr[,7,drop=FALSE])
SharpeRatio(dfr[,2:6], Rf = dfr[,6,drop=FALSE])
SharpeRatio(dfr[,2:6], Rf = 0)# dfr[,6,drop=FALSE])
SharpeRatio(dfr[,2:6], Rf = 0.95)# dfr[,6,drop=FALSE])
SharpeRatio(dfr[,2:6], Rf = dfr[,2:6,drop=FALSE])
SharpeRatio(dfr[,2:6], Rf = dfr[,6,drop=FALSE])
SharpeRatio(dfr[,2:6], Rf = dfr[,2,drop=FALSE])
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag)
mom_ret <- mom_ret.pctchange(lookback)
ranks <- mom_ret.rank(axis = 1, ascending = FALSE)
demeaned <- ranks.subtract(ranks.mean(axis = 1))
}
calc_mom <- function(price, lookback, lag){
mom_ret <- price.shift(lag)
mom_ret <- mom_ret.pctchange(lookback)
ranks <- mom_ret.rank(axis = 1, ascending = FALSE)
demeaned <- ranks.subtract(ranks.mean(axis = 1))
return(demeaned.divide(demeaned.std(axis=1), axis = 0))
}
compound <- lambda x: (1+x).prod() - 1
compound <- lambda(x: (1+x).prod() - 1)
?mean
?StdDev
daily_sr <- function(x){
return(mean(x)/stdDev(x))
}
strat_sr <- function(prices, lb, hold){
freq <- '#%'%hold
}
daily_rets <- prices.pct_change()
strat_sr <- function(prices, lb, hold){
freq <- '#%'%%hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
}
?resample
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- '#%'%%hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
}
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- '#%'%%hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- (port * returns).sum(axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
port_rets <- (port * returns).sum(axis=1)
port_rets <- sum(port * returns,axis=1)
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- '#%'%%hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
?sqrt
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- '#%' %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- '%d' %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- '%d' % hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- "%d" %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- as.int("%d") %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- int("%d") %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- as_int("%d") %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- as.integer("%d") %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
calc_mom <- function(price, lookback, lag){
mom_ret <- shift(price,lag)
mom_ret <- mom_ret.pctchange(lookback)
ranks <- mom_ret.rank(axis = 1, ascending = FALSE)
demeaned <- ranks.subtract(ranks.mean(axis = 1))
return(demeaned.divide(demeaned.std(axis=1), axis = 0))
}
compound <- function(x){
return(prod(1+x) - 1)
}
daily_sr <- function(x){
return(mean(x)/stdDev(x))
}
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- as.integer("%d") %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
?shift
calc_mom <- function(price, lookback, lag){
mom_ret <- shift(price, n = 1)
mom_ret <- mom_ret.pctchange(lookback)
ranks <- mom_ret.rank(axis = 1, ascending = FALSE)
demeaned <- ranks.subtract(ranks.mean(axis = 1))
return(demeaned.divide(demeaned.std(axis=1), axis = 0))
}
compound <- function(x){
return(prod(1+x) - 1)
}
daily_sr <- function(x){
return(mean(x)/stdDev(x))
}
strat_sr <- function(prices, lb, hold){
# Compute the portfolio weights
freq <- as.integer("%d") %% hold
port <- calc_mom(prices, lb)
daily_rets <- pctchange(prices)
# Compute the portfolio returns
port <- port.shift(1)
port <- port.resample(freq)
port <- first(port)
returns <- daily_rets.resample(freq)
returns <- returns.apply(compound)
port_rets <- sum(port * returns,axis=1)
return(daily_sr(port_rets) * sqrt(252 / hold))
}
strat_sr(fbc, 70, 30)
